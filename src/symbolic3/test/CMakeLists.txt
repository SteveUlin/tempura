add_executable(simplify_test simplify_test.cpp)
target_link_libraries(simplify_test PRIVATE symbolic3 meta)
add_test(NAME symbolic3_simplify COMMAND simplify_test)

add_executable(simplification_pipeline_test simplification_pipeline_test.cpp)
target_link_libraries(simplification_pipeline_test PRIVATE symbolic3 meta)
add_test(NAME symbolic3_simplification_pipeline COMMAND simplification_pipeline_test)

add_executable(term_collecting_test term_collecting_test.cpp)
target_link_libraries(term_collecting_test PRIVATE symbolic3 meta)
add_test(NAME symbolic3_term_collecting COMMAND term_collecting_test)

add_executable(matching_test matching_test.cpp)
target_link_libraries(matching_test PRIVATE symbolic3 meta)
add_test(NAME symbolic3_matching COMMAND matching_test)

add_executable(fraction_test fraction_test.cpp)
target_link_libraries(fraction_test PRIVATE symbolic3 meta)
add_test(NAME symbolic3_fraction COMMAND fraction_test)
set_tests_properties(symbolic3_fraction PROPERTIES LABELS "symbolic3;exact_math")

add_executable(exact_division_test exact_division_test.cpp)
target_link_libraries(exact_division_test PRIVATE symbolic3 meta)
add_test(NAME symbolic3_exact_division COMMAND exact_division_test)
set_tests_properties(symbolic3_exact_division PROPERTIES LABELS "symbolic3;exact_math")

add_executable(two_stage_simplify_test two_stage_simplify_test.cpp)
target_link_libraries(two_stage_simplify_test PRIVATE symbolic3 meta)
add_test(NAME symbolic3_two_stage_simplify COMMAND two_stage_simplify_test)
set_tests_properties(symbolic3_two_stage_simplify PROPERTIES LABELS "symbolic3;simplification")

add_executable(oscillation_prevention_test oscillation_prevention_test.cpp)
target_link_libraries(oscillation_prevention_test PRIVATE symbolic3 meta)
add_test(NAME symbolic3_oscillation_prevention COMMAND oscillation_prevention_test)
set_tests_properties(symbolic3_oscillation_prevention PROPERTIES LABELS "symbolic3;simplification;stability")
